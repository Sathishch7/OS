#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void firstFit(int blockSize[], int m, int processSize[], int n) {
int allocaƟon[n];
memset(allocaƟon, -1, sizeof(allocaƟon));

for (int i = 0; i < n; i++) {
for (int j = 0; j < m; j++) {
if (blockSize[j] >= processSize[i]) {
allocaƟon[i] = j;
blockSize[j] -= processSize[i];
break;
}
}
}
prinƞ("Process No.\tProcess Size\tBlock No.\n");
for (int i = 0; i < n; i++) {
prinƞ("%d\t\t%d\t\t", i + 1, processSize[i]);
if (allocaƟon[i] != -1)

prinƞ("%d\n", allocaƟon[i] + 1);
else
prinƞ("Not Allocated\n");
}
}

int main() {
int blockSize[] = {100, 500, 200, 300, 600};
int processSize[] = {212, 417, 112, 426};
int m = sizeof(blockSize) / sizeof(blockSize[0]);
int n = sizeof(processSize) / sizeof(processSize[0]);
prinƞ("First Fit Memory AllocaƟon:\n");
firstFit(blockSize, m, processSize, n);
return 0;
}
Output:
First Fit Memory AllocaƟon:
Process No. Process Size Block No.
1 212 2
2 417 5
3 112 3
4 426 Not Allocated
