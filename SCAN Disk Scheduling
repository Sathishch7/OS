#include <stdio.h>

#include <stdlib.h>

void SCAN(int requests[], int n, int head, int diskSize, int direcƟon) {
int seekCount = 0, distance;
int leŌ[50], right[50], l = 0, r = 0;

for (int i = 0; i < n; i++) {
if (requests[i] < head)
leŌ[l++] = requests[i];
else
right[r++] = requests[i];
}

leŌ[l++] = 0;
right[r++] = diskSize - 1;

qsort(leŌ, l, sizeof(int), (int (*)(const void *, const void *)) strcmp);
qsort(right, r, sizeof(int), (int (*)(const void *, const void *)) strcmp);

int *scanOrder = direcƟon == 0 ? leŌ : right;
int size = direcƟon == 0 ? l : r;

for (int i = 0; i < size; i++) {
distance = abs(scanOrder[i] - head);
seekCount += distance;

head = scanOrder[i];
prinƞ("%d ", head);
}
prinƞ("\nTotal Seek Time: %d\n", seekCount);
}

int main() {
int requests[] = {98, 183, 37, 122, 14, 124, 65, 67};
int head = 53;
prinƞ("SCAN Disk Scheduling:\n");
SCAN(requests, 8, head, 200, 1);
return 0;
}
Output:
SCAN Disk Scheduling:
65 67 98 122 124 183 199
Total Seek Time: 382
